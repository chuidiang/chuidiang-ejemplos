<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.chuidiang.ejemplos</groupId>
        <artifactId>docker-deploy</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>docker-rest-application</artifactId>
    <packaging>jar</packaging>

    <name>Java Examples with docker and maven</name>
    <url>http://chuwiki.chuidiang.org</url>

    <dependencies>
        <dependency>
            <groupId>com.chuidiang.ejemplos</groupId>
            <artifactId>rest-java-application</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>2.4.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.34.1</version>
                <configuration>
                    <images>
                        <image>
                            <alias>rest-java-application</alias>
                            <name>chuidiang/rest-java-application:${project.version}</name>
                            <build>
                                <from>java:8</from>
                                <assembly>
									<!-- name es tambien el directorio donde se colocaran las cosas -->
									<name>rest-application</name>
                                    <descriptor>rest-application/rest-application-assembly.xml</descriptor>
                                </assembly>
                                <cmd>
									<!-- /rest-application por el name de assembly
									      bin porque dentro del xml assembly dice directorio bin -->
                                    <shell>java -jar /rest-application/bin/rest-java-application-1.0-SNAPSHOT.jar</shell>
                                </cmd>
                            </build>
                            <run>
                                <hostname>rest</hostname>
                                <ports>
									<!-- elige un puerto al azar para exponer el 8080 del docker
									     y lo guarda en la variable tomcat.port -->
                                    <port>8080:8080</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://localhost:8080/</url>
                                    </http>
                                    <time>10000</time>
                                </wait>
                                <links>
                                    <link>database:db</link>
                                </links>
                                <workingDir>/rest-application/bin</workingDir>
                            </run>
                        </image>
						<image>
							<alias>database</alias>
							<name>chuidiang/database:${project.version}</name>
							<build>
                                <contextDir>${project.basedir}/src/main/docker/database</contextDir>
							</build>
							<run>
                                <hostname>database</hostname>
                                <env>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                    <POSTGRES_DB>docker_tests</POSTGRES_DB>
                                </env>
								<ports>
									<!-- elige un puerto al azar para exponer el 5432 del docker
									     y lo guarda en la variable database.port -->
									<port>5432:5432</port>
								</ports>
                                <wait>
                                    <time>30000</time> <!-- 30 seconds max -->
                                    <log>database system is ready to accept connections</log>
                                </wait>
							</run>

						</image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
